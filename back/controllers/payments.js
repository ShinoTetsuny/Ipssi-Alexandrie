const stripe = require('../payment/stripe');

// Cr√©er un paiement
exports.createPaymentIntent = async (req, res, next) => {
  try {
    const { amount, currency } = req.body;

    // Cr√©er un PaymentIntent
    const paymentIntent = await stripe.paymentIntents.create({
      amount,
      currency,
      payment_method_types: ['card'], // Types de paiement accept√©s
    });

    res.status(200).send({
      clientSecret: paymentIntent.client_secret,
    });
  } catch (error) {
    console.error('Erreur lors de la cr√©ation du PaymentIntent:', error);
    res.status(500).send({ error: 'Erreur lors de la cr√©ation du paiement' });
  }
};

// Webhook pour Stripe
exports.handleWebhook = (req, res, next) => {
  const payload = req.body;
  const sig = req.headers['stripe-signature'];
  const endpointSecret = 'VOTRE_SECRET_WEBHOOK';

  let event;

  try {
    event = stripe.webhooks.constructEvent(payload, sig, endpointSecret);
  } catch (err) {
    console.log(`‚ö†Ô∏è  Erreur lors de la v√©rification du webhook: ${err.message}`);
    return res.sendStatus(400);
  }

  // G√©rer l'√©v√©nement
  switch (event.type) {
    case 'payment_intent.succeeded':
      const paymentIntent = event.data.object;
      console.log(`üí∞ Paiement r√©ussi pour ${paymentIntent.amount}`);
      // Mettre √† jour votre base de donn√©es, envoyer un email, etc.
      break;
    // ... g√©rer d'autres types d'√©v√©nements
    default:
      console.log(`Unhandled event type ${event.type}`);
  }

  res.json({ received: true });
};
